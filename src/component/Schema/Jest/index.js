const NETWORK_TIMEOUT = 50000,

      normalizeName = ( str ) => {
        const re = /[^a-zA-Z0-9_-]/g;
        return str.replace( re, "--" );
      };

export const tplQuery = ({ target, selector }) => {
  return `const ${target} = async () => query( ${ JSON.stringify( selector )}, `
    + `${ JSON.stringify( target )} );`;
};

export const tplSuite = ({ title, body, targets }) => `
/**
 * Generated by https://github.com/dsheiko/puppetry
 * on ${ String( Date() ) }
 */
const { bs, png, query } = require( "../lib/bootstrap" )( ${ JSON.stringify( normalizeName( title ) ) } ),
      devices = require( "puppeteer/DeviceDescriptors" );

jest.setTimeout( ${NETWORK_TIMEOUT} );

${targets}

describe( ${ JSON.stringify( title ) }, async () => {
  beforeEach(async () => {
    await bs.setup();
  });

  afterEach(async () => {
    await bs.teardown();
  });

${body}

});
`;

export const tplGroup = ({ title, body }) => `
  describe( ${ JSON.stringify( title ) }, async () => {
${body}
  });
`;

export const tplTest = ({ title, body }) => `
    test( ${ JSON.stringify( title ) }, async () => {
      let result, assert;
${body}
    });
`;